---
// src/pages/articles.astro
import BaseLayout from '../layouts/BaseLayout.astro';
import ArticleCard from '../components/ArticleCard.astro';
import { getCollection } from 'astro:content';

// 記事一覧を取得（下書き以外）
const articles = await getCollection('articles', ({ data }) => !data.draft);
// 日付順にソート（新しい順）
articles.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

// カテゴリー別にグループ化
const articlesByCategory: Record<string, typeof articles> = {};
articles.forEach((article) => {
  const category = article.data.category;
  if (!articlesByCategory[category]) {
    articlesByCategory[category] = [];
  }
  articlesByCategory[category].push(article);
});

// デバッグ情報
console.log('Articles found:', articles.length);
articles.forEach((article, index) => {
  console.log(`Article ${index + 1}:`, article.data.title);
});

const pageTitle = "Articles | 記事一覧";

// 本番環境でComing Soonモードを有効にする
const isProduction = import.meta.env.PROD;
const currentPath = Astro.url.pathname;
const isContactPage = currentPath === '/contact' || currentPath === '/contact/';

// 本番環境でContactページ以外の場合のみComing Soonを表示
if (isProduction && !isContactPage) {
  return Astro.redirect('/coming-soon');
}
---

<BaseLayout pageTitle={pageTitle}>
  <main class="pt-16">
    <!-- ヒーローセクション -->
    <section class="relative text-center py-20 md:py-32 px-6 overflow-hidden">
      <!-- 背景のグラデーション -->
      <div class="absolute inset-0 z-0 opacity-20" style="background: radial-gradient(circle at 50% 30%, rgba(100, 100, 150, 0.5), transparent 70%);"></div>

      <div class="relative z-10 container mx-auto">
        <div class="flex justify-center mb-8">
          <div class="w-20 h-20 bg-blue-500 bg-opacity-10 rounded-full flex items-center justify-center">
            <svg class="w-10 h-10 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
            </svg>
          </div>
        </div>
        <h1 class="text-4xl md:text-6xl font-black mb-8 hero-gradient-text tracking-tight font-noto">Articles</h1>
        <p class="max-w-3xl mx-auto text-lg md:text-xl text-gray-300 mb-8 font-noto leading-relaxed">
          模擬国連に関連したトピックを、法学・政治学の観点から共に探究しましょう。
        </p>
      </div>
    </section>

    <!-- 記事一覧セクション -->
    <section class="py-12 md:py-24">
      <div class="container mx-auto px-6">
        <div class="max-w-6xl mx-auto">
          {articles.length > 0 ? (
            <div class="space-y-16">
              {Object.entries(articlesByCategory).map(([category, categoryArticles]) => (
                <div>
                  <div class="text-center mb-12">
                    <h2 class="text-2xl md:text-3xl font-bold mb-4 font-noto">
                      <span class="text-gray-500 mr-4">§</span>
                      <span class="hero-gradient-text">{category}</span>
                      <span class="text-gray-500 ml-4">§</span>
                    </h2>
                    <p class="text-gray-400 text-lg font-noto">
                      {category}に関する記事一覧
                    </p>
                  </div>
                  
                  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                    {categoryArticles.map((article) => (
                      <ArticleCard
                        title={article.data.title}
                        description={article.data.description}
                        category={article.data.category}
                        date={article.data.date}
                        tags={article.data.tags}
                        slug={article.slug}
                        image={article.data.image}
                      />
                    ))}
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div class="text-center py-12">
              <div class="flex justify-center mb-6">
                <div class="w-16 h-16 bg-gray-500 bg-opacity-10 rounded-full flex items-center justify-center">
                  <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                  </svg>
                </div>
              </div>
              <p class="text-gray-400 text-lg">記事がまだありません。</p>
              <p class="text-gray-500 text-sm mt-4">デバッグ情報: 記事数 = {articles.length}</p>
            </div>
          )}
        </div>
      </div>
    </section>
  </main>
</BaseLayout> 