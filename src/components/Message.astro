---
export interface Props {
  type?: 'info' | 'success' | 'warning' | 'error';
  title?: string;
  class?: string;
}

const { type = 'info', title, class: className = '' } = Astro.props;

const baseClasses = "p-4 rounded-lg border";

const typeClasses = {
  info: "bg-blue-50 border-blue-200 text-blue-800",
  success: "bg-green-50 border-green-200 text-green-800",
  warning: "bg-yellow-50 border-yellow-200 text-yellow-800",
  error: "bg-red-50 border-red-200 text-red-800"
};

const classes = `${baseClasses} ${typeClasses[type]} ${className}`;

const icons = {
  info: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>`,
  success: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>`,
  warning: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z"></path>`,
  error: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>`
};
---

<div class={classes}>
  <div class="flex">
    <div class="flex-shrink-0">
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <Fragment set:html={icons[type]} />
      </svg>
    </div>
    <div class="ml-3">
      {title && (
        <h3 class="text-sm font-medium">
          {title}
        </h3>
      )}
      <div class="text-sm">
        <slot />
      </div>
    </div>
  </div>
</div> 